package common;


/**
* common/BoxOfficePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /home/ben/workspace/soen423.a2/src/idl/boxoffice.idl
* Tuesday, November 8, 2011 3:54:34 PM EST
*/

public abstract class BoxOfficePOA extends org.omg.PortableServer.Servant
 implements common.BoxOfficeOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("reserve", new java.lang.Integer (0));
    _methods.put ("cancel", new java.lang.Integer (1));
    _methods.put ("show", new java.lang.Integer (2));
    _methods.put ("allEvents", new java.lang.Integer (3));
    _methods.put ("createEvent", new java.lang.Integer (4));
    _methods.put ("exchange", new java.lang.Integer (5));
    _methods.put ("getUDPPort", new java.lang.Integer (6));
    _methods.put ("getUDPHost", new java.lang.Integer (7));
    _methods.put ("shutdown", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // common/BoxOffice/reserve
       {
         try {
           int customer_id = in.read_long ();
           String show_id = in.read_string ();
           int quantity = in.read_long ();
           this.reserve (customer_id, show_id, quantity);
           out = $rh.createReply();
         } catch (common.BoxOfficePackage.invalid_customer $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_customerHelper.write (out, $ex);
         } catch (common.BoxOfficePackage.invalid_event $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_eventHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // common/BoxOffice/cancel
       {
         try {
           int customer_id = in.read_long ();
           String show_id = in.read_string ();
           int qty = in.read_long ();
           this.cancel (customer_id, show_id, qty);
           out = $rh.createReply();
         } catch (common.BoxOfficePackage.invalid_customer $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_customerHelper.write (out, $ex);
         } catch (common.BoxOfficePackage.invalid_event $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_eventHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // common/BoxOffice/show
       {
         try {
           String show_id = in.read_string ();
           int $result = (int)0;
           $result = this.show (show_id);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (common.BoxOfficePackage.invalid_event $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_eventHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // common/BoxOffice/allEvents
       {
         String $result[] = null;
         $result = this.allEvents ();
         out = $rh.createReply();
         common.BoxOfficePackage.eventsHelper.write (out, $result);
         break;
       }

       case 4:  // common/BoxOffice/createEvent
       {
         try {
           String event_id = in.read_string ();
           String title = in.read_string ();
           int capacity = in.read_long ();
           this.createEvent (event_id, title, capacity);
           out = $rh.createReply();
         } catch (common.BoxOfficePackage.invalid_event $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_eventHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // common/BoxOffice/exchange
       {
         try {
           int customer_id = in.read_long ();
           String reserved_event_id = in.read_string ();
           int reserved_tickets = in.read_long ();
           String desired_event_id = in.read_string ();
           int desired_tickets = in.read_long ();
           this.exchange (customer_id, reserved_event_id, reserved_tickets, desired_event_id, desired_tickets);
           out = $rh.createReply();
         } catch (common.BoxOfficePackage.invalid_customer $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_customerHelper.write (out, $ex);
         } catch (common.BoxOfficePackage.invalid_event $ex) {
           out = $rh.createExceptionReply ();
           common.BoxOfficePackage.invalid_eventHelper.write (out, $ex);
         }
         break;
       }

       case 6:  // common/BoxOffice/getUDPPort
       {
         int $result = (int)0;
         $result = this.getUDPPort ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 7:  // common/BoxOffice/getUDPHost
       {
         String $result = null;
         $result = this.getUDPHost ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // common/BoxOffice/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:common/BoxOffice:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public BoxOffice _this() 
  {
    return BoxOfficeHelper.narrow(
    super._this_object());
  }

  public BoxOffice _this(org.omg.CORBA.ORB orb) 
  {
    return BoxOfficeHelper.narrow(
    super._this_object(orb));
  }


} // class BoxOfficePOA
